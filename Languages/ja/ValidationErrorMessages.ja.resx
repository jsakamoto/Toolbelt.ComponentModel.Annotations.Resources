<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>引数 '{0}' を nulll または空にしたり、空白のみを含めたりすることはできません。</value>
  </data>
  <data name="AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties" xml:space="preserve">
    <value>型 '{0}' に関連付けられたメタデータ型には、次の不明なプロパティまたはフィールドが含まれています。{1}。これらのメンバの名前がメイン型のプロパティの名前と一致していることを確認してください。</value>
  </data>
  <data name="AttributeStore_Unknown_Property" xml:space="preserve">
    <value>型 '{0}' には、'{1}' という名前のパブリック プロパティが含まれていません。</value>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>プロパティ {0}.{1} が見つかりませんでした。</value>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>'{0}' と '{1}' が一致しません。</value>
  </data>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>{0} という名前のプロパティが見つかりませんでした。</value>
  </data>
  <data name="CreditCardAttribute_Invalid" xml:space="preserve">
    <value>フィールド {0} が有効なクレジット カード番号ではありません。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Must_Return_ValidationResult" xml:space="preserve">
    <value>型 '{1}' の CustomValidationAttribute メソッド '{0}' は、System.ComponentModel.DataAnnotations.ValidationResult を返す必要があります。 成功を表すには、System.ComponentModel.DataAnnotations.ValidationResult.Success を使用します。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Not_Found" xml:space="preserve">
    <value>CustomValidationAttribute メソッド '{0}' が型 '{1}' に存在しないか、パブリックで静的ではありません。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Required" xml:space="preserve">
    <value>CustomValidationAttribute.Method が指定されていません。</value>
  </data>
  <data name="CustomValidationAttribute_Method_Signature" xml:space="preserve">
    <value>型 '{1}' の CustomValidationAttribute メソッド '{0}' は、予期されるシグネチャ (public static ValidationResult {0}(object value, ValidationContext context) と一致する必要があります。 値は厳密に型指定できます。ValidationContext パラメーターはオプションです。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Conversion_Failed" xml:space="preserve">
    <value>メソッド {2}.{3} で期待どおりに型 '{0}' の値を '{1}' に変換できませんでした。</value>
  </data>
  <data name="CustomValidationAttribute_Type_Must_Be_Public" xml:space="preserve">
    <value>カスタム検証タイプ '{0}' は public である必要があります。</value>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} が無効です。</value>
  </data>
  <data name="CustomValidationAttribute_ValidatorType_Required" xml:space="preserve">
    <value>CustomValidationAttribute.ValidatorType が指定されていません。</value>
  </data>
  <data name="DataTypeAttribute_EmptyDataTypeString" xml:space="preserve">
    <value>カスタムデータ型文字列を null または空にすることはできません。</value>
  </data>
  <data name="DisplayAttribute_PropertyNotSet" xml:space="preserve">
    <value>{0} プロパティが設定されていません。 {1} メソッドを使用して値を取得します。</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>フィールド {0} が有効な電子メール アドレスではありません。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>EnumDataTypeAttribute に指定された型を null にすることはできません。</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>型 '{0}' は列挙型を表す必要があります。</value>
  </data>
  <data name="FileExtensionsAttribute_Invalid" xml:space="preserve">
    <value>フィールド {0} は、次の拡張子を持つファイルのみを受け入れます。{1}。</value>
  </data>
  <data name="LengthAttribute_InvalidValueType" xml:space="preserve">
    <value>{0} 型のフィールドは、文字列型、配列型、または ICollection 型である必要があります。</value>
  </data>
  <data name="LocalizableString_LocalizationFailed" xml:space="preserve">
    <value>ローカリゼーションが失敗したため、プロパティ '{0}' を取得できません。 型 '{1}' がパブリックではないか、または '{2}' という名前のパブリック静的文字列プロパティが含まれていません。</value>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute には、ゼロより大きい長さの値が必要です。MaxLength() をパラメーターなしで使用して、文字列または配列が最大許容長を持つことができることを示します。</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は、最大長が '{1}' の文字列型または配列型である必要があります。</value>
  </data>
  <data name="MetadataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>メタデータ クラス タイプを null にすることはできません。</value>
  </data>
  <data name="MinLengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>MinLengthAttribute の Length 値は 0 以上でなければなりません。</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は、最小長が '{1}' の文字列型または配列型である必要があります。</value>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>フィールド {0} が有効な電話番号ではありません。</value>
  </data>
  <data name="RangeAttribute_ArbitraryTypeNotIComparable" xml:space="preserve">
    <value>型 {0} は、{1} を実装する必要があります。</value>
  </data>
  <data name="RangeAttribute_MinGreaterThanMax" xml:space="preserve">
    <value>最大値 '{0}' は最小値 '{1}' 以上でなければなりません。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Min_And_Max" xml:space="preserve">
    <value>最小値と最大値を設定する必要があります。</value>
  </data>
  <data name="RangeAttribute_Must_Set_Operand_Type" xml:space="preserve">
    <value>OperandType は、最小値と最大値に文字列を使用する場合に設定する必要があります。</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は、{1} から {2} の間でなければなりません。</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は正規表現 '{1}' と一致する必要があります。</value>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>パターンは有効な正規表現に設定する必要があります。</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は必須です。</value>
  </data>
  <data name="StringLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>最大長は負でない整数でなければなりません。</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} は、最大長が {1} の文字列でなければなりません。</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>フィールド {0} は、最小長が {2}、最大長が {1} の文字列でなければなりません。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNotAString" xml:space="preserve">
    <value>値 '{1}' を持つ位置 {0} のキー・パラメーターが文字列ではありません。すべてのキー制御パラメーターは文字列でなければなりません。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNull" xml:space="preserve">
    <value>位置 {0} のキー・パラメーターが null です。すべてのキー制御パラメーターは文字列でなければなりません。</value>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyOccursMoreThanOnce" xml:space="preserve">
    <value>値 '{1}' を持つ位置 {0} のキー・パラメーターは、複数回出現します。</value>
  </data>
  <data name="UIHintImplementation_NeedEvenNumberOfControlParameters" xml:space="preserve">
    <value>制御パラメーターの数は偶数でなければなりません。</value>
  </data>
  <data name="UrlAttribute_Invalid" xml:space="preserve">
    <value>フィールド {0} が、http、https、または ftp の有効な完全修飾 URL ではありません。</value>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>ErrorMessageString または ErrorMessageResourceName のどちらか一方を設定する必要がありますが、両方を設定することはできません。</value>
  </data>
  <data name="ValidationAttribute_IsValid_NotImplemented" xml:space="preserve">
    <value>IsValid(object value) はこのクラスによって実装されていません。 推奨されるエントリ ポイントは GetValidationResult() であり、クラスは IsValid(object value, ValidationContext context) をオーバーライドする必要があります。</value>
  </data>
  <data name="ValidationAttribute_NeedBothResourceTypeAndResourceName" xml:space="preserve">
    <value>この属性には、ErrorMessageResourceType と ErrorMessageResourceName の両方を設定する必要があります。</value>
  </data>
  <data name="ValidationAttribute_ResourcePropertyNotStringType" xml:space="preserve">
    <value>リソース型 '{1}' のプロパティ '{0}' は文字列型ではありません。</value>
  </data>
  <data name="ValidationAttribute_ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>リソースの種類 '{0}' には、'{1}' という名前のアクセス可能な静的プロパティがありません。</value>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>フィールド {0} が無効です。</value>
  </data>
  <data name="Validator_InstanceMustMatchValidationContextInstance" xml:space="preserve">
    <value>提供されるインスタンスは、指定された検証コンテキスト上のオブジェクトインスタンスと一致する必要があります。</value>
  </data>
  <data name="Validator_Property_Value_Wrong_Type" xml:space="preserve">
    <value>プロパティ '{0}' の値は '{1}' 型である必要があります。</value>
  </data>
</root>